/* General styling */
* {
  box-sizing: border-box;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  background-color: lightgray;
}

.container {
  /* padding: 12px; */
  border: 2px dashed black;
}

.item {
  padding: 12px;
  font-size: 18px;
  text-transform: uppercase;
  border-radius: 6px;
}

.item:nth-child(1) {
  background-color: #845ec2;
}

.item:nth-child(2) {
  background-color: #0081cf;
}

.item:nth-child(3) {
  background-color: #d65db1;
}

.item:nth-child(4) {
  background-color: #ff9671;
}

.item:nth-child(5) {
  background-color: #00c9a7;
}

.item:nth-child(6) {
  background-color: #c34a36;
}

/* FLEXBOX */
/* Когато имаме flex, елементите в него се опитват да се наместят вътре. Когато мястото не стига те излизат извън контейнера
  */
.container {
  /* height: 500px; */

  /* Когато имаме flex, елементите в него се опитват да се наместят вътре. Когато мястото не стига те излизат извън контейнера.
    */
  display: flex;

  /* flex-direction: row; 
      Flex-direction определя посоакта на движение в контейнера. Пъровоначалната му стойност е row и движението е от ляво надясно (ел1ел2ел3).
    */
  /* flex-direction: row-reverse; 
      Посоката на движение от дясно на ляво. Така първия елемент ще застане най-вдясно и другите ще се наредят преди него (ел3ел2ел1).
    */

  /* flex-direction: column; 
      Елементите се нареждат в колона един под друг. Променя се посоката на движение. При row main axis-a e по хоризонтала, а при column е по
      вертикала.
    */
  /* flex-direction: column-reverse; 
      Подоббно на row-reverse, елементите се пренареждат но сега от долу нагоре.
    */

  /* Flex-wrap работи в полна на това елементите в конетейнера да останат в него, когато пространството не е достатъчно. ПЪрвоначалната му
        стойност е nowrap. Това е причината ако експлицитно не е зададена друга стойност елементите да излизат извън контейнера при липса на пространство.
        При стойност wrap имаме достъп до това елементите да се нарежда един до и да остават в границите на конейтенера, като просто слизат на нов ред при липса
        на достъчно пространство. Стойността wrap-reverse променя посоката на нареждаде от долу нагоре.
    */
  flex-wrap: wrap;

  /* Justify-content спомага за това как да се нареждат елементите един спрямо друг на база празнотото пространство в контейнера.
        Това нареждане става по main-axis-а. 
        Стойност: center - центрира елементите по хоризонтала.
        Стойност: flex-start - елемнтите започват от началанта точна на контеинера, съобразено с посоката, която сме задали.
        Стойност: flex-end - елемнтите започват от кррайната точна на контеинера, съобразено с посоката, която сме задали.
        Стойност: space-around - Празното пространство в контейнера се разделя на равни части и се задавакато разстояние на и от двете страни на всеки елемента.
        Стойност: space-between - Празното пространство в контейнера се калкулира/разделя на равни части и се задава като разстояние между елементите в контейнера.
        Стойност: space-evenly - Празното пространсто в контенера се разделя на равни части и се задава като разстояние между елементите. Разликата с around, е че
        това пространство и в началото и в края и между елементите ще бъде едно и също.
    
    */
  justify-content: flex-start;

  /* 
      Подредба на елементите по второстепенната посока (вертикала, когато е зададено flex-direction: row, кеоето и основната стойност, ако не е зададена друга) и 
      хоризонтала когато е flex-direction: column.
      Стойност: center - центрира елементите. В кобинацив с justify-content, елемента се центрира и хоризонтално и вертикално.
      Стойност: flex-start - от горе надолу.
      Стойност: flex-end - от долу нагоре.
      Стойност: stretch - първоначалната стойност на това пропърти. Елементите започват от горния и стигат до долния край на контейнера.
    */
  align-items: center;


  /* 
      Това пропърти работи когато е включен wrap-a и контролира разстоянието между редовете, които се създават, когато разстоянието в контейнера не едостатъчно
      и елементите трябва да слязат на нов ред.
      Стойности: cnter, flex-start, end и други.
      align-content: center; 
    */

    /* Задава пространство между елементите по хоризонтала и вертикала. */
  gap: 30px;
}